{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","persons.js","App.js","index.js"],"names":["Filter","onChange","PersonForm","onSubmit","onNameChange","onNumberChange","type","Persons","persons","onDelete","map","p","name","number","onClick","id","Notification","message","className","status","content","baseUrl","axios","get","newObject","post","delete","data","put","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setFilter","setMessage","useEffect","api","then","response","filteredPersons","filter","indexOf","e","target","value","preventDefault","existPerson","find","alert","window","confirm","newPerson","newPersons","catch","Math","max","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0077aaa1.chunk.js","sourcesContent":["const Filter = ({onChange}) => <div>\n  filter shown with <input onChange={onChange}/>\n</div>\n\nexport default Filter\n","const PersonForm = ({onSubmit, onNameChange, onNumberChange}) => \n<form onSubmit={onSubmit}>\n  <div>\n    name: <input onChange={onNameChange}/>\n  </div>\n  <div>\n    number: <input onChange={onNumberChange}/>\n  </div>\n  <div>\n    <button type=\"submit\">add</button>\n  </div>\n</form>\n\nexport default PersonForm","const Persons = ({persons, onDelete}) => persons.map(p => \n<div key={p.id}>\n    {p.name} {p.number}  \n    <button onClick={() => onDelete(p.id)}> delete </button>\n</div>\n)\n\nexport default Persons","const Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className={message.status}>\n        {message.content}\n      </div>\n    )\n  }\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/persons'\n\nconst getAll = () => axios.get(baseUrl)\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst remove = (id) => axios.delete(`${baseUrl}/${id}`)\n\nconst update = (id, data) => axios.put(`${baseUrl}/${id}`, data)\n\nexport default { \n  getAll: getAll, \n  create: create,\n  remove: remove,\n  update: update\n}","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport api from './persons'\n\n\nconst App = () => {\n  \n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setFilter ] = useState('')\n  const [ message, setMessage ] = useState(null)\n\n  useEffect(() => {    \n    api.getAll().then((response) => setPersons(response.data));\n  }, []);\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n    const existPerson = persons.find(p => p.name === newName)\n    if (existPerson && existPerson.number === newNumber) {\n      alert(`${newName} is already added to phonebook`)\n    } else if (existPerson) {\n      if(window.confirm(`${existPerson.name} is already added to the phonebook, replace the old number with a new one ?`)) {\n        const newPerson = { ...existPerson, number: newNumber }\n        api.update(existPerson.id, newPerson).then(response => {\n          if (response.status === 200) {\n            const newPersons = [\n              ...persons.filter(p => p.id !== newPerson.id),\n              newPerson\n            ]\n            setPersons(newPersons)\n            setMessage({\n              content: `Updated ${newPerson.name}`,\n              status: \"success\"\n            })\n          }\n        }).catch(e => {\n          if (e.response.status === 404) {\n            setMessage({\n              content: `Information of ${newPerson.name} has already been removed from the server`,\n              status: \"error\"\n            })\n          } else {\n            setMessage({\n              content: `Failed to update ${newPerson.name}`,\n              status: \"error\"\n            })\n          }\n        })\n      }\n    } else {\n      const newPerson = {\n        name: newName,\n        number: newNumber,\n        id: Math.max(...persons.map(p => p.id)) + 1\n      }\n      api.create(newPerson).then((response) => {\n        if (response.status === 201) {\n          const newPersons = [\n            ...persons, \n            newPerson\n          ]\n          setPersons(newPersons)\n          setMessage({\n            content: `Added ${newPerson.name}`,\n            status: \"success\"\n          })\n        }\n      }).catch(e => {\n        setMessage({\n          content: `Failed to add ${newPerson.name}`,\n          status: \"error\"\n        })\n      })\n    }\n  }\n  const onDelete = (id) => {\n    const target = persons.find(p => p.id === id)\n    if (window.confirm(`Delete ${target.name} ?`)) {\n      api.remove(id).then(response => {\n        if (response.status === 200) {\n          const newPersons = persons.filter(p => p.id !== id)\n          setPersons(newPersons)\n          setMessage({\n            content: `Removed ${target.name}`,\n            status: \"success\"\n          })\n        } \n      }).catch(e => {\n        if (e.response.status === 404) {\n          setMessage({\n            content: `Information of ${target.name} has already been removed from the server`,\n            status: \"error\"\n          })\n        } else {\n          setMessage({\n            content: `Failed to remove ${target.name}`,\n            status: \"error\"\n          })\n        }\n      })\n    }\n  }\n  \n  const filteredPersons = persons.filter(p => p.name.indexOf(newFilter) !== -1)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message}/>\n      <Filter onChange={(e) => setFilter(e.target.value)}/>\n      <PersonForm \n        onSubmit={onSubmit} \n        onNameChange={(e) => setNewName(e.target.value)} \n        onNumberChange={(e) => setNewNumber(e.target.value)}/>\n      <h2>Numbers</h2>\n      <Persons \n        persons={filteredPersons}\n        onDelete={onDelete}\n      />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}